---
title: | 
  Reproduzierbare Forschung \
  mit R und Quarto -- Fortgeschrittenes
subtitle: Workshop f√ºr die GSE Wuppertal
date:  "27. Juni, 2025"
date-format: long
author:
  - Bj√∂rn S. Siepe
editor: source
preview-links: true
include-in-header:
  - text: |
      <style>
      #title-slide .title {
        font-size: 1.8em;
        color: #29487d;
      }
      </style>
format: 
  revealjs:
    menu: true
    pdf: true
    smaller: true
    auto-stretch: false
    embed-resources: true
    standalone: true
    progress: true
    incremental: true
    slide-number: true
    title-slide-attributes:
      data-background-size: contain
      data-background-position: bottom
      data-background-opacity: "0.8"
bibliography: references.bib
---
## Reproducibility ist ein Spektrum

![@Molo2025](img/comp-repro-spectrum.png){fig-align="center" width="323"}

. . .

- Ziel heute: Verstehen, **was m√∂glich ist** auf der rechten Seite

- ~~Ziel heute: Tiefes technisches Verst√§ndnis f√ºr fortgeschrittene Arbeitsabl√§ufe ~~

------------------------------------------------------------------------



## Dynamische Reports l√∂sen copy-paste Probleme, aber...

::: incremental
- Wie beh√§lt man den √úberblick √ºber verschiedene **Dateiversionen**?
    - `Paper-final.qmd` ‚Üí `Paper-final2.qmd` ‚Üí `Paper-final2b.qmd` ‚Üí üò±
    - L√∂sung: **Git**
- Woher wei√ü man, welche Dateien in welcher **Reihenfolge** ausgef√ºhrt werden sollen?
    - `functions.qmd`, `analysis.qmd`, `plots.qmd`, `paper.qmd`, ü§î
    - L√∂sung: **Make**
- Wie stellt man sicher, dass der Code noch l√§uft, wenn sich **Softwareversionen** √§ndern?
    - Heute": R Version 4.5, ggplot2 3.5.2 ‚Üí `N√§chstes Jahr`: R Version ‚ùì, ggplot2 ‚ùì
    - L√∂sung: **Docker**
- Sehr sch√∂nes Paper √ºber einen solchen Workflow: @Peikert2021
:::

::: aside
@Molo2025
::: 
------------------------------------------------------------------------

## N√ºtzliche Tools 1: `renv`

-   **R package** f√ºr **Reproduzierbarkeit** von R-Projekten  

::: columns
::: .column width="50%"
```{{r}}
renv::init())  # renv initialisieren
renv::snapshot()  # Abh√§ngigkeiten erfassen
renv::restore()  # Abh√§ngigkeiten wiederherstellen
renv::dependencies()  # Abh√§ngigkeiten auflisten
```
::: 
::: .column width="50%"
![@renv2025](img/renv.png){fig-align="center" width="200"}
------------------------------------------------------------------------
## N√ºtzliche Tools 2: `targets` 
Pipeline f√ºr **Reproduzierbarkeit** von R-Projekten

![@targets2021 & wlandau.github.io](img/targets_graph.png){fig-align="center" width="400"}

------------------------------------------------------------------------

## Versionskontrolle mit Git

::: columns
::: {.column width="70%"}
::: incremental
- **De-facto-Standard** Versionskontrollsystem
- Kann **in der Zeit zur√ºckgehen** zu fr√ºheren Versionen
- Kann **√Ñnderungen** zwischen Versionen verfolgen
- Kann **verzweigen und zusammenf√ºhren**
- N√ºtzlich f√ºr **Kollaboration** und **Dateitransfer**
- **Command-Line-Schnittstelle** (Lernkurve)
- **Grafische Schnittstelle** in vielen Editoren/IDEs (z. B. RStudio, VS Code)
- **Git** (Software) ‚â† **GitHub**/GitLab (Git-Repository-Hosting-Dienste)
- Snapshots erm√∂glichen die **dauerhafte Archivierung** (mit DOI) auf Daten-Repositories (z. B. Zenodo)
:::
:::

::: {.column width="30%"}
![[<https://git-scm.com/downloads/logos>]{style="font-size:0.6em"}](img/Git-logo.png){fig-align="center" width="150"}

![@Turing2024](img/git-turing-way.png){fig-align="center" width="500"}

::: fragment
![[<https://commons.wikimedia.org/wiki/File:Git_operations.svg>]{style="font-size:0.7em"}](img/Git_operations.png)
:::
:::
:::

---

## Versionskontrolle mit Git - Wo starten?

- **Git installieren**
- **GitHub Account** erstellen
- **Git in RStudio** aktivieren
- **RStudio-Projekt** erstellen
- **RStudio-Projekt mit Git** initialisieren
- **RStudio-Projekt mit GitHub verbinden**

::: fragment
Gute Ressource:
- Happy Git with R: <https://happygitwithr.com/>
::: 

---

## Automatisierung mit Make

- Tool f√ºr **komputationale Rezepte**
- Automatisierung von mehreren Schritten in einem

::: columns
::: {.column width="50%"}
> Arrabbiata sauce, or sugo all'arrabbiata in Italian, is a spicy sauce for pasta made from garlic, tomatoes, and dried red chili peppers cooked in olive oil.

[https://en.wikipedia.org/wiki/Arrabbiata_sauce](https://en.wikipedia.org/wiki/Arrabbiata_sauce){style="font-size:0.7em"}
:::

::: {.column width="50%"}
**Makefile**
``` makefile
arrabiata.pdf: arrabiata.qmd sauce.csv pasta.R
  quarto render arrabiata.qmd

sauce.csv: cook.R tomatoes.zip aromatics.yaml
  R -e "source(cook.R)"

aromatics.yaml: sizzle.py garlic.txt chili.json
  python sizzle.py garlic.txt
  python sizzle.py chili.json
```

**Terminal**
``` bash
make arrabiata.pdf # execute recipe
```
:::
:::

::: fragment
![@Molo2025](img/Make-diagram.png){fig-align="center" width="600"}
:::

---

## Containerisierung mit Docker

::::::: columns
::::: {.column width="75%"}
::: incremental
-   **Software Container** beinhalten das komputationale Umfeld f√ºr die Ausf√ºhrung von Code

-   Komponenten eines Containers: 

    -   Operating System (OS)
    -   R und R-Pakete (oder andere Programmiersprachen)
    -   Numerische Bibliotheken (z.B., LAPACK, BLAS)
    -   Andere Software (z.B., LaTeX, Java)

-   **Docker** ist ein beliebtes Containerisierungstool

-   **Rocker** ist ein Docker Image f√ºr R (<https://rocker-project.org/>)
:::

::: fragment
Dockerfile

``` dockerfile
# Rocker container image mit R 4.4
FROM rocker/verse:4.4

# R Packages zum damaligen Zeitpunkt installieren
RUN install2.r ggplot2 dplyr kableExtra
```
:::
:::::

::: {.column width="25%"}
![[<https://commons.wikimedia.org/wiki/File:Docker-svgrepo-com.svg>]{style="font-size:0.7em"}](img/docker.png)
:::
:::::::

------------------------------------------------------------------------

## Alles zusammen

:::::: columns
::: {.column width="55%"}
![Nach @Peikert2021 und @Molo2025](img/workflow-quarto.png)
:::

:::: {.column width="45%"}
::: fragment
Terminal

``` {.bash style="font-size:0.85em"}
# alles in einem Schritt ausf√ºhren
make docker-report
```

‚Üí `report.html`

:::
::::
::::::

## Zus√§tzliches Thema: Code Reviews

-   **Code Reviews** sind eine Methode, um die Qualit√§t von Code zu verbessern
-   TODO

------------------------------------------------------------------------

## Abschlussdiskussion

-   Welche Tools k√∂nnten am n√ºtzlichsten sein?
-   Welche Tools sind am schwierigsten zu lernen?
-   Wo sind die gr√∂√üten verbleibenden H√ºrden?

------------------------------------------------------------------------

## Zusammenfassung

- Dynamische Reports + Versionskontrolle + Automatisierung + Containerisierung

    - verbessert **Reproduzierbarkeit**, **Wiederverwendbarkeit**, **Zusammenarbeit**
    - verleiht der Forschung mehr **Transparenz**, **Glaubw√ºrdigkeit**


- Es gibt eine **Lernkurve** , aber ...

    - beginnt einfach und lernen Sie **Schritt f√ºr Schritt** üí°.

    - die Tools werden **stetig weiterentwickelt** üöÄ.

    - investierte Lernzeit kann Ihnen in Zukunft **Zeit sparen** ‚è≥

    - F√§higkeiten sind **innerhalb/au√üerhalb von Academia** n√ºtzlich üí∞ üë®‚Äçüî¨


------------------------------------------------------------------------
## Quarto f√ºr andere Dinge

-   Quarto f√ºr eigene Webseiten: <https://quarto.org/docs/websites/>
-   Quarto f√ºr Blogs: <https://quarto.org/docs/blogs/>
-   Quarto f√ºr B√ºcher: <https://quarto.org/docs/books/>
-   Quarto f√ºr Pr√§sentationen: <https://quarto.org/docs/presentations/>
-   Quarto f√ºr Lehrmaterialien: Beispiel <https://datavizf24.classes.andrewheiss.com/>

------------------------------------------------------------------------
## Kontakt

## Kontakt

<div style="text-align:center; font-size:1.2em; line-height:1.7;">

**Vielen Dank f√ºr die Aufmerksamkeit!** üéâ

<br>

üìß <a href="mailto:bjoern.siepe@uni-marburg.de">bjoern.siepe@uni-marburg.de</a>  
üåê <a href="https://bsiepe.github.io" target="_blank">bsiepe.github.io</a>  
üå§Ô∏è <a href="https://bsky.app/profile/bsiepe.bsky.social" target="_blank">bsky.app/profile/bsiepe.bsky.social</a>

</div>



## Session Info
```{r}
pander::pander(sessionInfo())
```
------------------------------------------------------------------------
## Literatur {.smaller}
