---
title: | 
  Reproduzierbare Forschung \
  mit R und Quarto -- Praktischer Teil
subtitle: Workshop für die GSE Wuppertal
date:  "27. Juni, 2025"
date-format: long
author:
  - Björn S. Siepe
editor: source
preview-links: true
include-in-header:
  - text: |
      <style>
      #title-slide .title {
        font-size: 1.8em;
        color: #29487d;
      }
      </style>
format: 
  revealjs:
    menu: true
    pdf: true
    smaller: true
    auto-stretch: false
    embed-resources: true
    progress: true
    incremental: true
    slide-number: true
    code-block-bg: true
    code-block-border-left: "#31BAE9"
    title-slide-attributes:
      data-background-size: contain
      data-background-position: bottom
      data-background-opacity: "0.8"
bibliography: references.bib
---
# Quarto/Markdown Grundlagen

## YAML Header
-   Enthält Metadaten für das Dokument
-   Beispiel:

```{.yaml .fragment data-fragment-index=1}
title: "Using features of dynamic networks to guide treatment selection and outcome prediction"
subtitle: "Simulation Code"
```
```{.yaml .fragment data-fragment-index=2}
author: 
 - name: Björn S. Siepe
   orcid: 0000-0002-9558-4648
   affiliations: University of Marburg
date: "`r Sys.Date()`"
```
```{.yaml .fragment data-fragment-index=3}
format:
  html:
    toc: true
    number-sections: true
    theme: cosmo
    code-fold: true
    code-tools: true
    code-summary: "Show the code"
    fig-width: 7
    fig-height: 4.5
    fig-align: "center"
    embed-resouces: true
```
```{.yaml .fragment data-fragment-index=4}
execute:
  message: false
  warning: false
  eval: false
```

## Text

Basierend auf markdown: 
````markdown
## Formatierung
*italic* **bold** ~~strikeout~~ `code`
superscript^2^ subscript~2~
[underline]{.underline} [small caps]{.smallcaps}

## Überschriften
# Erste Ebene
## Zweite Ebene
### Dritte Ebene

## Listen
-   Punkt 1 einer Liste
-   Punkt 2
    -   Punkt 2a
    -   Punkt 2b

1.  Nummerierte Liste Punkt 1
2.  Punkt 2.
    Die Zahlen der Liste werden automatisch angepasst.
    
## Quotes
> Gutes Zitat hier.
````

::: aside
@wickham2023
:::

## Code Chunks - Basics

::: columns
::: {.column width="50%"}
### Quarto Input

```{{r}}
mean(c(1, 2, 3, 4, 5))
```

```{{r}}
#| label: my-plot
#| echo: false
plot(cars)
```

```{{python}}
import pandas as pd
df = pd.DataFrame({'x': [1, 2, 3]})
print(df)
```

:::

::: {.column width="50%"}
### Rendered Output
```{r}
mean(c(1, 2, 3, 4, 5))
```

**Plot (with echo: false):**
```{r}
#| echo: false
plot(cars, main="Speed vs Distance")
```

**Python output:**
```
   x
0  1
1  2
2  3
```
:::
:::

::: aside
@wickham2023
:::


## Code Chunks: Anpassung

-   Code Chunks können mit verschiedenen Optionen angepasst werden
    - Namen
    - Ausführung
    - Abbildungsoptionen

```{{r}}
#| label: Beispielchunk
#| echo: true 
#| fig-width: 6
```


## Code Chunks: Optionen

Verschiedene Optionen können in den Code Chunks verwendet werden:

![@wickham2023](img/chunk-options.png){fig-align="center" width="860"}


## Inline Code

- Inline Code wird mit `r` oder `python` in Backticks geschrieben:

````markdown
Der Mittelwert der ganzen Zahlen von 1 bis 5 ist `r mean(c(1, 2, 3, 4, 5))`.
````

Ergibt:

Der Mittelwert der ganzen Zahlen von 1 bis 5 ist `r mean(c(1, 2, 3, 4, 5))`.

## Visual Editor

- Quarto bietet einen Visual Editor, der die Bearbeitung von Markdown-Dateien erleichtert
- Er kann über das Menü "View" → "Visual Editor" aktiviert werden
- Er ermöglicht eine WYSIWYG-Erfahrung

## Übung 1

Zeit zum Üben!

- Laden Sie entweder `aufgabe_01.qmd` herunter oder erstellen Sie eine neue Quarto-Datei.
- Personalisieren Sie den YAML-Header.
- Laden Sie den "USArrests" Datensatz in R. Dies geht mit `data("USArrests")`.
- Schreiben Sie einen kurzen Einleitungstext für eine Beispielanalyse. Verwenden Sie unterschiedliche Formatierungen.
- Berichten Sie über das Minimum und Maximum einer der Variablen in einem Satz.

## Abbildungen

- Beispiel:

::: fragment
```{r}
#| echo: true
#| fig-width: 9
#| fig-height: 5
#| code-fold: true

data("USArrests")
library(ggplot2)
ggplot(USArrests, aes(x = UrbanPop, y = Murder, color = Assault)) +
  geom_point(size = 3, alpha = 0.8) +
  scale_color_gradient(low = "#56B1F7", high = "#132B43") +
  labs(
    title = "Zusammenhang zwischen Urbanisierung und Mordrate",
    subtitle = "USArrests Datensatz (1973)",
    x = "Anteil Stadtbevölkerung (%)",
    y = "Mordrate pro 100.000 Einwohner",
    color = "Anzahl\nAssault"
  ) +
  theme_minimal(base_size = 14)
```
:::

## Mehrere Abbildungen

- Wir können auch mehrere Abbildungen zusammen einfügen:

::: fragment
```{r}
#| echo: false
#| fig-width: 6
#| fig-height: 6
#| layout-ncol: 1
#| code-fold: true

# Scatterplot
library(ggplot2)
data("USArrests")

p1 <- ggplot(USArrests, aes(x = UrbanPop, y = Murder)) +
  geom_point(color = "#56B1F7", size = 2) +
  geom_smooth(method = "lm", se = FALSE, color = "#132B43") +
  labs(
    title = "Urbanisierung vs. Mordrate",
    x = "Anteil Stadtbevölkerung (%)",
    y = "Mordrate pro 100.000"
  ) +
  theme_minimal()

# Histogram
p2 <- ggplot(USArrests, aes(x = Assault)) +
  geom_histogram(bins = 15, fill = "#56B1F7", alpha = 0.7) +
  labs(
    title = "Verteilung der Assault-Raten",
    x = "Assault pro 100.000 Einwohner",
    y = "Anzahl Bundesstaaten"
  ) +
  theme_minimal()

# Anzeigen
p1
p2
```
::: 

## Externe Grafiken

- Externe Bilder können mit Markdown-Syntax oder knitr::include_graphics() eingefügt werden:

**Markdown-Syntax:**
````markdown
![Bildbeschreibung](pfad/zum/bild.png){width=50%}
````

**R Code Chunk:**
```{r}
#| echo: true
#| eval: false
#| fig-cap: "Externes Bild"
#| out-width: "60%"

knitr::include_graphics("images/my_plot.png")
```

**Online-Bilder:**
````markdown
![R Logo](https://www.r-project.org/logo/Rlogo.png){width=200px}
````

## Tabellen

TODO

## Übung 2

TODO

## Referenzen

TODO

## Rechenintensive Chunks

TODO

## Übung 3

TODO

## Session Info
```{r}
pander::pander(sessionInfo())
```
------------------------------------------------------------------------
## Literatur {.smaller}